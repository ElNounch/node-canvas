environment:
  matrix:
    # node.js
    - nodejs_version: 0.12
    # io.js
#    - nodejs_version: 2
    # Previous versions
#    - nodejs_version: 0.10
#    - nodejs_version: 0.8
    # Previous versions of io.js
#    - nodejs_version: 1

platform:
  - x64
#  - x86

install:
  # Install required version of Node.js/Io.js
  - ps: Install-Product node $env:nodejs_version $env:platform
  # Update npm itself
  - set PATH=%APPDATA%\npm;%APPVEYOR_BUILD_FOLDER%\node_modules\.bin;%PATH%
  - npm install -g npm

  - ps: |
     $env:GTK = $env:APPVEYOR_BUILD_FOLDER + '\local-build\GTK'

     If ( -Not ( Test-Path $env:GTK ) ) {
       If ( $env:platform -Eq 'x64' ) {
         $source = 'http://ftp.gnome.org/pub/gnome/binaries/win64/gtk+/2.22/gtk+-bundle_2.22.1-20101229_win64.zip'
       } else {
         $source = 'http://ftp.gnome.org/pub/gnome/binaries/win32/gtk+/2.24/gtk+-bundle_2.24.10-20120208_win32.zip'
       }
       $zipFile = $env:TEMP + '\gtk+-bundle.zip'
       $webclient = New-Object System.Net.WebClient
       $webclient.DownloadFile( $source, $zipFile )
       & 7z x $zipFile ('-o' + $env:GTK)
     }

build_script:
  - node-gyp configure build

test_script:
  # Output useful info for debugging
  - node --version
  - npm --version
  # Run tests
#  - npm test
  - mocha --reporter dot --ui exports --require should test/*.test.js
#  - npm run benchmark

# Caching npm parts
cache:
  - local-build
